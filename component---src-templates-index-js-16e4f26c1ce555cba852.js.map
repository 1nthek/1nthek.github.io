{"version":3,"sources":["webpack://gatsby-starter-ghost/./src/templates/index.js"],"names":["data","location","pageContext","posts","allGhostPost","edges","isHome","className","map","node","key","id","post"],"mappings":"kLA8CA,UA/Bc,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACzBC,EAAQH,EAAKI,aAAaC,MAEhC,OACE,oCACE,kBAAC,IAAD,CAAUJ,SAAUA,IACpB,kBAAC,KAAD,CAAQK,QAAQ,GACd,yBAAKC,UAAU,aACb,6BAASA,UAAU,aAChBJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAET,kBAAC,KAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,QAGlC,kBAAC,KAAD,CAAYP,YAAaA","file":"component---src-templates-index-js-16e4f26c1ce555cba852.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport { Layout, PostCard, Pagination } from '../components/common';\nimport { MetaData } from '../components/common/meta';\n\n/**\n * Main index page (home page)\n *\n * Loads all posts from Ghost and uses pagination to navigate through them.\n * The number of posts that should appear per page can be setup\n * in /utils/siteConfig.js under `postsPerPage`.\n *\n */\nconst Index = ({ data, location, pageContext }) => {\n  const posts = data.allGhostPost.edges;\n\n  return (\n    <>\n      <MetaData location={location} />\n      <Layout isHome={true}>\n        <div className=\"container\">\n          <section className=\"post-feed\">\n            {posts.map(({ node }) => (\n              // The tag below includes the markup for each post - components/common/PostCard.js\n              <PostCard key={node.id} post={node} />\n            ))}\n          </section>\n          <Pagination pageContext={pageContext} />\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allGhostPost: PropTypes.object.isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  pageContext: PropTypes.object,\n};\n\nexport default Index;\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n  query GhostPostQuery($limit: Int!, $skip: Int!) {\n    allGhostPost(sort: { order: DESC, fields: [published_at] }, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          ...GhostPostFields\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}