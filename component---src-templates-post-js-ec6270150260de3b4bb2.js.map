{"version":3,"sources":["webpack://gatsby-starter-ghost/./src/templates/post.js"],"names":["data","location","post","ghostPost","type","codeinjection_styles","className","feature_image","src","alt","title","dangerouslySetInnerHTML","__html","html"],"mappings":"4LAwDA,UA1Ca,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACdC,EAAOF,EAAKG,UAElB,OACE,oCACE,kBAAC,IAAD,CAAUH,KAAMA,EAAMC,SAAUA,EAAUG,KAAK,YAC/C,kBAAC,IAAD,KACE,2BAAOA,KAAK,YAAZ,GAA2BF,EAAKG,uBAElC,kBAAC,KAAD,KACE,yBAAKC,UAAU,aACb,6BAASA,UAAU,WAChBJ,EAAKK,cACJ,4BAAQD,UAAU,sBAChB,yBAAKE,IAAKN,EAAKK,cAAeE,IAAKP,EAAKQ,SAExC,KACJ,6BAASJ,UAAU,qBACjB,wBAAIA,UAAU,iBAAiBJ,EAAKQ,OAGpC,6BAASJ,UAAU,qCAAqCK,wBAAyB,CAAEC,OAAQV,EAAKW","file":"component---src-templates-post-js-ec6270150260de3b4bb2.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport { Layout } from '../components/common';\nimport { MetaData } from '../components/common/meta';\n\n/**\n * Single post view (/:slug)\n *\n * This file renders a single post and loads all the content.\n *\n */\nconst Post = ({ data, location }) => {\n  const post = data.ghostPost;\n\n  return (\n    <>\n      <MetaData data={data} location={location} type=\"article\" />\n      <Helmet>\n        <style type=\"text/css\">{`${post.codeinjection_styles}`}</style>\n      </Helmet>\n      <Layout>\n        <div className=\"container\">\n          <article className=\"content\">\n            {post.feature_image ? (\n              <figure className=\"post-feature-image\">\n                <img src={post.feature_image} alt={post.title} />\n              </figure>\n            ) : null}\n            <section className=\"post-full-content\">\n              <h1 className=\"content-title\">{post.title}</h1>\n\n              {/* The main post content */}\n              <section className=\"content-body load-external-scripts\" dangerouslySetInnerHTML={{ __html: post.html }} />\n            </section>\n          </article>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nPost.propTypes = {\n  data: PropTypes.shape({\n    ghostPost: PropTypes.shape({\n      codeinjection_styles: PropTypes.object,\n      title: PropTypes.string.isRequired,\n      html: PropTypes.string.isRequired,\n      feature_image: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default Post;\n\nexport const postQuery = graphql`\n  query ($slug: String!) {\n    ghostPost(slug: { eq: $slug }) {\n      ...GhostPostFields\n    }\n  }\n`;\n"],"sourceRoot":""}